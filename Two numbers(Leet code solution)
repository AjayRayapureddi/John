import java.util.HashMap;

public class TwoSum {

    public static int[] twoSum(int[] nums, int target) {
        // Create a HashMap to store the complement of each element and its index
        HashMap<Integer, Integer> complementMap = new HashMap<>();

        // Iterate through the array
        for (int i = 0; i < nums.length; i++) {
            int currentNum = nums[i];
            int complement = target - currentNum;

            // Check if the complement exists in the HashMap
            if (complementMap.containsKey(complement)) {
                // Return the indices of the two numbers that add up to the target
                return new int[]{complementMap.get(complement), i};
            }

            // Put the current number and its index into the HashMap
            complementMap.put(currentNum, i);
        }

        // No solution found, return an empty array or handle it as needed
        return new int[0];
    }

    public static void main(String[] args) {
        // Example usage
        int[] nums = {2, 7, 11, 15};
        int target = 9;

        int[] result = twoSum(nums, target);

        // Print the result
        System.out.println("Output: [" + result[0] + ", " + result[1] + "]");
    }
}
